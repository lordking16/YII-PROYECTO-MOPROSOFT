<?php

/**
 * This is the model base class for the table "validation".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Validation".
 *
 * Columns in table "validation" available as properties of the model,
 * followed by relations of table "validation" available as properties of the model.
 *
 * @property integer $id_validation
 * @property integer $id_document
 * @property string $start_validation
 * @property string $end_validation
 * @property string $place
 *
 * @property User[] $users
 * @property Document $idDocument
 * @property ValidationDefect[] $validationDefects
 */
abstract class BaseValidation extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'validation';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Validation|Validations', $n);
	}

	public static function representingColumn() {
		return 'start_validation';
	}

	public function rules() {
		return array(
			array('id_validation, id_document, start_validation, place', 'required'),
			array('id_validation, id_document', 'numerical', 'integerOnly'=>true),
			array('place', 'length', 'max'=>60),
			array('end_validation', 'safe'),
			array('end_validation', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id_validation, id_document, start_validation, end_validation, place', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'users' => array(self::MANY_MANY, 'User', 'user_validation(id_validation, id_user)'),
			'idDocument' => array(self::BELONGS_TO, 'Document', 'id_document'),
			'validationDefects' => array(self::HAS_MANY, 'ValidationDefect', 'id_validation'),
		);
	}

	public function pivotModels() {
		return array(
			'users' => 'UserValidation',
		);
	}

	public function attributeLabels() {
		return array(
			'id_validation' => Yii::t('app', 'Id Validation'),
			'id_document' => null,
			'start_validation' => Yii::t('app', 'Start Validation'),
			'end_validation' => Yii::t('app', 'End Validation'),
			'place' => Yii::t('app', 'Place'),
			'users' => null,
			'idDocument' => null,
			'validationDefects' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id_validation', $this->id_validation);
		$criteria->compare('id_document', $this->id_document);
		$criteria->compare('start_validation', $this->start_validation, true);
		$criteria->compare('end_validation', $this->end_validation, true);
		$criteria->compare('place', $this->place, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}