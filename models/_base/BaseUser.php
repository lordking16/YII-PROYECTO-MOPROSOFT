<?php

/**
 * This is the model base class for the table "user".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "User".
 *
 * Columns in table "user" available as properties of the model,
 * followed by relations of table "user" available as properties of the model.
 *
 * @property integer $id_user
 * @property string $name
 * @property string $email
 * @property string $username
 * @property string $password
 * @property integer $role
 *
 * @property Project[] $projects
 * @property Validation[] $validations
 * @property Verification[] $verifications
 */
abstract class BaseUser extends GxActiveRecord {
    
        public $password1;
	public $password_repeat;

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'user';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'User|Users', $n);
	}

	public static function representingColumn() {
		return 'name';
	}

	public function rules() {
		return array(
			array('name, email, username, password, role', 'required'),
			array('role', 'numerical', 'integerOnly'=>true),
			array('name', 'length', 'max'=>50),
			array('email', 'length', 'max'=>45),
                        array('password','length','max'=>32),
			array('password','compare'),
			array('password_repeat','safe'),
			array('id_user, name, email, username, password, role', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'projects' => array(self::MANY_MANY, 'Project', 'project_user(id_user, id_project)'),
			'validations' => array(self::MANY_MANY, 'Validation', 'user_validation(id_user, id_validation)'),
			'verifications' => array(self::MANY_MANY, 'Verification', 'user_verification(id_user, id_verification)'),
		);
	}
        
        public function check($value)
	{
		if($value==$this->password)
		{
			return true;
		}
		return false;
	}

	public function pivotModels() {
		return array(
			'projects' => 'ProjectUser',
			'validations' => 'UserValidation',
			'verifications' => 'UserVerification',
		);
	}

	public function attributeLabels() {
		return array(
			'id_user' => Yii::t('app', 'Id User'),
			'name' => Yii::t('app', 'Name'),
			'email' => Yii::t('app', 'Email'),
			'username' => Yii::t('app', 'Username'),
			//'password' => Yii::t('app', 'Password'),
                        'password'=>'password',
			'password_repeat'=>'Repite Password',
			'role' => Yii::t('app', 'Role'),
			'projects' => null,
			'validations' => null,
			'verifications' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id_user', $this->id_user);
		$criteria->compare('name', $this->name, true);
		$criteria->compare('email', $this->email, true);
		$criteria->compare('username', $this->username, true);
		$criteria->compare('password', $this->password, true);
		$criteria->compare('role', $this->role);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}