<?php

/**
 * This is the model base class for the table "document".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Document".
 *
 * Columns in table "document" available as properties of the model,
 * followed by relations of table "document" available as properties of the model.
 *
 * @property integer $id_document
 * @property integer $id_project
 * @property string $name
 * @property string $root
 * @property string $register_Date
 * @property integer $phase
 * @property integer $enable
 *
 * @property DefectCatalog[] $defectCatalogs
 * @property Project $idProject
 * @property Validation[] $validations
 * @property Verification[] $verifications
 */
abstract class BaseDocument extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'document';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Document|Documents', $n);
	}

	public static function representingColumn() {
		return 'name';
	}

	public function rules() {
		return array(
			array('id_project, name, root, register_Date, phase,verification, validation', 'required'),
			array('id_project, phase, enable, verification, validation', 'numerical', 'integerOnly'=>true),
			array('name', 'length', 'max'=>50),
			array('root', 'length', 'max'=>100),
			array('enable', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id_document, id_project, name, root, register_Date, phase, enable, verification, validation', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'defectCatalogs' => array(self::HAS_MANY, 'DefectCatalog', 'id_document'),
			'idProject' => array(self::BELONGS_TO, 'Project', 'id_project'),
			'validations' => array(self::HAS_MANY, 'Validation', 'id_document'),
			'verifications' => array(self::HAS_MANY, 'Verification', 'id_document'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id_document' => Yii::t('app', 'Id Document'),
			'id_project' => null,
			'name' => Yii::t('app', 'Name'),
			'root' => Yii::t('app', 'Root'),
			'register_Date' => Yii::t('app', 'Register Date'),
			'phase' => Yii::t('app', 'Phase'),
			'enable' => Yii::t('app', 'Enable'),
                        'verification'=>'Need a verification?',
                        'validation'=>'Need a validation?',
			'defectCatalogs' => null,
			'idProject' => null,
			'validations' => null,
			'verifications' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id_document', $this->id_document);
		$criteria->compare('id_project', $this->id_project);
		$criteria->compare('name', $this->name, true);
		$criteria->compare('root', $this->root, true);
		$criteria->compare('register_Date', $this->register_Date, true);
		$criteria->compare('phase', $this->phase);
		$criteria->compare('enable', $this->enable);
                $criteria->compare('verification', $this->verification);
                $criteria->compare('validation', $this->validation);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}